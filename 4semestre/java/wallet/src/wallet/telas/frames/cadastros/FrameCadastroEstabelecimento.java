package wallet.telas.frames.cadastros;

import java.awt.Color;
import javax.swing.JDesktopPane;
import wallet.aux.Helper;
import wallet.models.Estabelecimento;
import wallet.telas.AreaDeTrabalho;

/**
 * @author Gustavo Marttos
 * @author Jordana Nogueira
 * @author Leandro Cazarini
 */
 
public class FrameCadastroEstabelecimento extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrameCadastroEstabelecimento
     */
    public FrameCadastroEstabelecimento() {
        initComponents();
    }
    
    // Preenche os campos na hora de alterar.
    private void preencherAlterar(Estabelecimento est)
    {
        txtCNPJ.setValue(est.getCnpj());
        txtNome.setText(est.getNome());
        txtEndereco.setText(est.getEndereco());
        txtBairro.setText(est.getBairro());
        txtCEP.setValue(est.getCep());
        txtCidade.setText(est.getCidade());
        cbbUF.setSelectedItem(est.getUf());
        txtTelefone.setValue(est.getTelefone());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "Convert2Diamond"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        lstEstabelecimento = AreaDeTrabalho.getEstabelecimentos();
        lstEstabelecimento = org.jdesktop.observablecollections.ObservableCollections.observableList(lstEstabelecimento);
        lblCNPJ = new javax.swing.JLabel();
        lblNomeEmpresa = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        cbbUF = new javax.swing.JComboBox();
        lblUF = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCNPJ = new javax.swing.JFormattedTextField();
        txtEndereco = new javax.swing.JTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEstabelecimento = new javax.swing.JTable();
        btExcluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        lblExtraInfo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Estabelecimento");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formCadastroEstabelecimentoClose(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblCNPJ.setText("CNPJ");

        lblNomeEmpresa.setText("Nome");

        lblEndereco.setText("Endere√ßo");

        lblBairro.setText("Bairro");

        lblCEP.setText("CEP");

        lblCidade.setText("Cidade");

        cbbUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        lblUF.setText("UF");

        lblTelefone.setText("Telefone");

        try
        {
            javax.swing.text.MaskFormatter formatCNPJ = new javax.swing.text.MaskFormatter("##.###.###/####-##");

            txtCNPJ = new javax.swing.JFormattedTextField(formatCNPJ);
        }
        catch (Exception e)
        {
        }

        //txtCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            //  public void focusLost(java.awt.event.FocusEvent e){
                //    txtCNPJFocusLost (e);
                //}
            //});

    try
    {
        javax.swing.text.MaskFormatter formatCEP = new javax.swing.text.MaskFormatter("#####-###");

        txtCEP = new javax.swing.JFormattedTextField(formatCEP);
    }
    catch (Exception e)
    {
    }

    try
    {
        javax.swing.text.MaskFormatter formatTel = new javax.swing.text.MaskFormatter("(##) ####-####");

        txtTelefone = new javax.swing.JFormattedTextField(formatTel);
    }
    catch (Exception e)
    {
    }

    org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstEstabelecimento, tbEstabelecimento);
    org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cnpj}"));
    columnBinding.setColumnName("CNPJ");
    columnBinding.setColumnClass(String.class);
    columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nome}"));
    columnBinding.setColumnName("Nome");
    columnBinding.setColumnClass(String.class);
    columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cidade}"));
    columnBinding.setColumnName("Cidade");
    columnBinding.setColumnClass(String.class);
    columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${uf}"));
    columnBinding.setColumnName("UF");
    columnBinding.setColumnClass(String.class);
    columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefone}"));
    columnBinding.setColumnName("Telefone");
    columnBinding.setColumnClass(String.class);
    bindingGroup.addBinding(jTableBinding);
    jTableBinding.bind();
    jScrollPane1.setViewportView(tbEstabelecimento);

    btExcluir.setText("Excluir");
    btExcluir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btExcluirActionPerformed(evt);
        }
    });

    btAlterar.setText("Alterar");
    btAlterar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btAlterarActionPerformed(evt);
        }
    });

    btSalvar.setText("Salvar");
    btSalvar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btSalvarActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblNomeEmpresa)
                        .addComponent(lblCNPJ)
                        .addComponent(lblEndereco)
                        .addComponent(lblCidade)
                        .addComponent(lblTelefone))
                    .addGap(19, 19, 19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNome)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(txtEndereco)
                            .addGap(24, 24, 24)
                            .addComponent(lblBairro)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblCEP)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblUF)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbbUF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btExcluir)
                            .addGap(18, 18, 18)
                            .addComponent(btAlterar)
                            .addGap(18, 18, 18)
                            .addComponent(btSalvar))
                        .addComponent(lblExtraInfo, javax.swing.GroupLayout.Alignment.TRAILING))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblCNPJ)
                .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblNomeEmpresa)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblEndereco)
                .addComponent(lblBairro)
                .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblCidade)
                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblCEP)
                .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblUF)
                .addComponent(cbbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblTelefone)
                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblExtraInfo)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btExcluir)
                .addComponent(btAlterar)
                .addComponent(btSalvar))
            .addContainerGap())
    );

    bindingGroup.bind();

    setBounds(0, 0, 660, 435);
    }// </editor-fold>//GEN-END:initComponents

    private void formCadastroEstabelecimentoClose(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formCadastroEstabelecimentoClose
        JDesktopPane dsk = getDesktopPane();
        
        ((AreaDeTrabalho) dsk).fecharCadastroEstabelecimento();
    }//GEN-LAST:event_formCadastroEstabelecimentoClose

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        /**
         * O bot√£o de Salvar nesta tela tem duas fun√ß√µes:
         *      1 - criar um novo estabelecimento; ou
         *      2 - editar um estabelecimento existente.
         * 
         * Se o JButton "btAlterar" estiver ATIVADO (enabled) √© porque
         * criar√° um novo estabelecimento, mas caso esteja DESATIVADO (disabled)
         * ele alterar√° o estabelecimento.
         */
        if (validarCadastro())
        {
            // Pode criar.
            if (btAlterar.isEnabled())
            {
                Estabelecimento estabelecimento = new Estabelecimento();
            
                estabelecimento.setCnpj(txtCNPJ.getValue().toString());
                estabelecimento.setNome(txtNome.getText());
                estabelecimento.setEndereco(txtEndereco.getText());
                estabelecimento.setBairro(txtBairro.getText());
                estabelecimento.setCidade(txtCidade.getText());
                estabelecimento.setCep(txtCEP.getValue().toString());
                estabelecimento.setUf(cbbUF.getSelectedItem().toString());
                estabelecimento.setTelefone(txtTelefone.getValue().toString());

                if (Estabelecimento.existeEstabelecimento(estabelecimento.getCnpj()))
                {
                    Helper.mostrarMensagem("Estabelecimento j√° existente!", Color.ORANGE, lblExtraInfo);
                }
                else
                {
                    lstEstabelecimento.add(estabelecimento);

                    Helper.mostrarMensagem("Estabelecimento cadastrado com sucesso!", Color.GREEN, lblExtraInfo);
                    
                    limparFormulario();
                }
            }
            // Pode alterar
            else
            {
                if (!Estabelecimento.existeEstabelecimento(txtCNPJ.getValue().toString()))
                {
                    Helper.mostrarMensagem("Estabelecimento n√£o existente!", Color.RED, lblExtraInfo);
                }
                else
                {
                    Estabelecimento estabelecimento = lstEstabelecimento
                            .get(tbEstabelecimento.getSelectedRow());

                    estabelecimento.setCnpj(txtCNPJ.getValue().toString());
                    estabelecimento.setNome(txtNome.getText());
                    estabelecimento.setEndereco(txtEndereco.getText());
                    estabelecimento.setBairro(txtBairro.getText());
                    estabelecimento.setCep(txtCEP.getValue().toString());
                    estabelecimento.setCidade(txtCidade.getText());
                    estabelecimento.setUf(cbbUF.getSelectedItem().toString());

                    Helper.mostrarMensagem("Estabelecimento alterado com sucesso!", Color.GREEN, lblExtraInfo);

                    btAlterar.setEnabled(true);
                    btExcluir.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        /**
         * O bot√£o Alterar s√≥ funcionar√° se houver alguma linha da tabela
         * selecionada.
         */
        if (tbEstabelecimento.getSelectedRow() > -1)
        {
            Estabelecimento e = lstEstabelecimento.get(tbEstabelecimento.getSelectedRow());

            // Preenche os campos com os dados do estabelecimento.
            preencherAlterar(e);

            btAlterar.setEnabled(false);
            btExcluir.setEnabled(false);
            btSalvar.setEnabled(true);
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        /**
         * O bot√£o Excluir s√≥ funcionar√° se houver alguma linha da tabela
         * selecionada.
         */
        if (tbEstabelecimento.getSelectedRow() > -1)
        {
            lstEstabelecimento.remove(tbEstabelecimento.getSelectedRow());
        
            Helper.mostrarMensagem("Estabelecimento removido!", Color.RED, lblExtraInfo);

            limparFormulario();
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    // Limpa o formul√°rio da tela.
    private void limparFormulario()
    {
        txtCNPJ.setValue("");
        txtNome.setText("");
        txtEndereco.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtCEP.setValue("");
        cbbUF.setSelectedItem("");
        txtTelefone.setValue("");
    }
    
    /**
     * Valida o formul√°rio conforme a regra de neg√≥cio.
     * @return Se o formul√°rio est√° OK.
     */
    private boolean validarCadastro()
    {
        if (!Helper.validarCNPJ(txtCNPJ.getValue()))
        {
            Helper.mostrarMensagem("Informe um CNPJ", Color.RED, lblExtraInfo);
            
            return false;
        }
        
                
        if (txtNome.getText().trim().length() == 0)
        {
            Helper.mostrarMensagem("Informe o nome da Empresa", Color.RED, lblExtraInfo);
            
            return false;
        }
        
               
        if (txtEndereco.getText().trim().length() == 0)
        {
            Helper.mostrarMensagem("Informe o endere√ßo da Empresa", Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtBairro.getText().trim().length() == 0)
        {
            Helper.mostrarMensagem("Informe o bairro da Empresa", Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtCEP.getValue() == null)
        {
            Helper.mostrarMensagem("Informe um CEP", Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtCidade.getText().trim().length() == 0)
        {
            Helper.mostrarMensagem("Informe a cidade", Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtTelefone.getText().trim().length() == 0){
            Helper.mostrarMensagem("Informe um telefone", Color.RED, lblExtraInfo);
        }
        
        // Est√° OK.
        Helper.mostrarMensagem("", lblExtraInfo);

        return true;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbbUF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCNPJ;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblExtraInfo;
    private javax.swing.JLabel lblNomeEmpresa;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblUF;
    private java.util.List<Estabelecimento> lstEstabelecimento;
    private javax.swing.JTable tbEstabelecimento;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCNPJ;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
