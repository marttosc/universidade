
package wallet.telas.frames.cadastros;

import java.awt.Color;
import java.util.LinkedList;
import javax.swing.JDesktopPane;
import wallet.aux.Helper;
import wallet.models.Cartao;
import wallet.models.CartaoCredito;
import wallet.models.CartaoDebito;
import wallet.models.Usuario;
import wallet.telas.AreaDeTrabalho;

/**
 * @author Gustavo Marttos
 * @author Jordana Nogueira
 * @author Leandro Cazarini
 */
public class FrameCadastroCartao extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrameCadastroCartão
     */
    public FrameCadastroCartao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        lstCartoes = AreaDeTrabalho.getCartoes();
        lblCPF = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        lblNomeTitular = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblInformeCartao = new javax.swing.JLabel();
        lblNumeroCartao = new javax.swing.JLabel();
        cmbxBandeira = new javax.swing.JComboBox();
        lblBandeira = new javax.swing.JLabel();
        lblDataValidade = new javax.swing.JLabel();
        cmbxDataMes = new javax.swing.JComboBox();
        cmbxdataAno = new javax.swing.JComboBox();
        lblCodigoVerificaçao = new javax.swing.JLabel();
        btExcluir = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        cmbxTipo = new javax.swing.JComboBox();
        lblLimite = new javax.swing.JLabel();
        txtLimite = new wallet.aux.swing.text.JNumberFormatField();
        txtNumeroCartao = new javax.swing.JFormattedTextField();
        txtCVC = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCartoes = new javax.swing.JTable();
        lblExtraInfo = new javax.swing.JLabel();

        lstCartoes = org.jdesktop.observablecollections.ObservableCollections.observableList(lstCartoes);

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Cartão");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblCPF.setText("CPF");

        try
        {
            javax.swing.text.MaskFormatter formatCPF = new javax.swing.text.MaskFormatter("###.###.###-##");

            txtCPF = new javax.swing.JFormattedTextField(formatCPF);
        }
        catch (Exception e)
        {
        }
        txtCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCPFFocusLost(evt);
            }
        });

        lblNomeTitular.setText("Nome do titular do cartão");

        lblInformeCartao.setText("Informe qual cartão será cadastrado");

        lblNumeroCartao.setText("Número do cartão");

        cmbxBandeira.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "American Express", "Diners Club", "Elo", "MasterCard", "Visa" }));

        lblBandeira.setText("Bandeira");

        lblDataValidade.setText("Data de validade");

        cmbxDataMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cmbxdataAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));

        lblCodigoVerificaçao.setText("CVC");

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        cmbxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Crédito", "Débito" }));

        lblLimite.setText("Limite");

        try
        {
            javax.swing.text.MaskFormatter formatCartao = new javax.swing.text.MaskFormatter("#### #### #### ####");

            txtNumeroCartao = new javax.swing.JFormattedTextField(formatCartao);
        }
        catch (Exception e)
        {
        }

        try
        {
            javax.swing.text.MaskFormatter formatCVC = new javax.swing.text.MaskFormatter("###");

            txtCVC = new javax.swing.JFormattedTextField(formatCVC);
        }
        catch (Exception e)
        {
        }

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lstCartoes, tblCartoes);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipo}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Número");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliente.nome}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bandeira}"));
        columnBinding.setColumnName("Bandeira");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mesValidade}"));
        columnBinding.setColumnName("Mês Val.");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${anoValidade}"));
        columnBinding.setColumnName("Ano Val.");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblCartoes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNomeTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNome))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumeroCartao)
                            .addComponent(lblBandeira)
                            .addComponent(lblDataValidade)
                            .addComponent(lblCodigoVerificaçao)
                            .addComponent(lblLimite))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbxDataMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbxdataAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbxBandeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroCartao, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCVC, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 223, Short.MAX_VALUE)
                        .addComponent(lblExtraInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInformeCartao)
                                .addGap(18, 18, 18)
                                .addComponent(cmbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCPF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSalvar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeTitular)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInformeCartao)
                    .addComponent(cmbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroCartao)
                    .addComponent(txtNumeroCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbxBandeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBandeira))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataValidade)
                    .addComponent(cmbxDataMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxdataAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoVerificaçao)
                    .addComponent(txtCVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLimite)
                    .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExtraInfo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAlterar)
                    .addComponent(btSalvar)
                    .addComponent(btExcluir))
                .addContainerGap())
        );

        bindingGroup.bind();

        setBounds(0, 0, 562, 572);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        JDesktopPane cartao = getDesktopPane();
        ((AreaDeTrabalho) cartao).fecharCadastroCartao();
    }//GEN-LAST:event_formInternalFrameClosing

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (validarCadastro())
        {
            // Se o botão alterar está habilitado, é porque é cadastro.
            if (btAlterar.isEnabled())
            {
                Cartao cartao;
            
                if (cmbxTipo.getSelectedItem().toString().toLowerCase().equals("débito"))
                {
                    cartao = new CartaoDebito();
                }
                else
                {
                    cartao = new CartaoCredito();
                }

                String cpf = txtCPF.getText().trim();

                cartao.setTipo(cmbxTipo.getSelectedItem().toString());
                cartao.setCliente(AreaDeTrabalho.getUsuario(cpf));
                cartao.setNumero(txtNumeroCartao.getValue().toString());
                cartao.setCvc(txtCVC.getValue().toString());
                cartao.setBandeira(cmbxBandeira.getSelectedItem().toString());
                cartao.setMesValidade(Integer.parseInt(cmbxDataMes.getSelectedItem()
                        .toString()));
                cartao.setAnoValidade(Integer.parseInt(cmbxdataAno.getSelectedItem()
                        .toString()));

                if (cartao instanceof CartaoCredito)
                {
                    ((CartaoCredito) cartao).setLimite(Double.parseDouble(txtLimite
                            .getText().trim().replaceAll("\\.", "").replaceAll(",", ".")));
                }
                else if (cartao instanceof CartaoDebito)
                {
                    ((CartaoDebito) cartao).setSaldo(Double.parseDouble(txtLimite
                            .getText().trim().replaceAll("\\.", "").replaceAll(",", ".")));
                }

                if (!Cartao.existeCartao(cartao.getNumero()))
                {
                    lstCartoes.add(cartao);
                
                    Helper.mostrarMensagem("Cartão cadastrado com sucesso!", Color.GREEN, lblExtraInfo);
                }
                else
                {
                    Helper.mostrarMensagem("Cartão existente!", Color.RED, lblExtraInfo);
                }
            }
            else
            {
                // Botão alterar foi ativado, logo, vai alterar o cartão.
                
                Cartao card = lstCartoes.get(tblCartoes.getSelectedRow());
                
                String cpf = txtCPF.getText().trim();

                card.setTipo(cmbxTipo.getSelectedItem().toString());
                card.setCliente(AreaDeTrabalho.getUsuario(cpf));
                card.setNumero(txtNumeroCartao.getValue().toString());
                card.setCvc(txtCVC.getValue().toString());
                card.setBandeira(cmbxBandeira.getSelectedItem().toString());
                card.setMesValidade(Integer.parseInt(cmbxDataMes.getSelectedItem()
                        .toString()));
                card.setAnoValidade(Integer.parseInt(cmbxdataAno.getSelectedItem()
                        .toString()));

                if (card instanceof CartaoCredito)
                {
                    ((CartaoCredito) card).setLimite(Double.parseDouble(txtLimite
                            .getText().trim().replaceAll("\\.", "").replaceAll(",", ".")));
                }
                else if (card instanceof CartaoDebito)
                {
                    ((CartaoDebito) card).setSaldo(Double.parseDouble(txtLimite
                            .getText().trim().replaceAll("\\.", "").replaceAll(",", ".")));
                }
                
                Helper.mostrarMensagem("Cartão alterado com sucesso!", Color.ORANGE, lblExtraInfo);
            }
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private boolean validarCadastro()
    {
        if (!Helper.validarCPF(txtCPF.getValue()) || txtNome.getText().trim().equals(""))
        {
            Helper.mostrarMensagem("Informe um CPF", Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtNumeroCartao.getValue() == null
                || txtNumeroCartao.getValue().toString().trim().equals(""))
        {
            Helper.mostrarMensagem("Informe o número do cartão",
                    Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (txtCVC.getValue() == null
                || txtCVC.getValue().toString().trim().equals(""))
        {
            Helper.mostrarMensagem("Informe o código de verificação",
                    Color.RED, lblExtraInfo);
            
            return false;
        }
        
        if (Double.parseDouble(txtLimite.getText().trim()
                .replaceAll("\\.", "").replaceAll(",", ".")) < 100)
        {
            Helper.mostrarMensagem("Informe o limite do cartão (mín. R$ 100)",
                    Color.RED, lblExtraInfo);
            
            return false;
        }
        
        Helper.mostrarMensagem("", lblExtraInfo);
        
        return true;
    }
    
    private void txtCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFFocusLost
        String cpf = txtCPF.getText().trim();

        if (Usuario.existeUsuario(cpf))
        {
            Usuario user = AreaDeTrabalho.getUsuario(cpf);
            
            txtNome.setText(user.getNome());
            txtNome.setEnabled(false);
        }
        else
        {
            txtCPF.setValue("");
            
            txtNome.setText("");
            txtNome.setEnabled(true);
        }
    }//GEN-LAST:event_txtCPFFocusLost

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        if (tblCartoes.getSelectedRow() > -1)
        {
            btAlterar.setEnabled(false);
            btExcluir.setEnabled(false);
            
            Cartao card = lstCartoes.get(tblCartoes.getSelectedRow());
            
            txtCPF.setValue(card.getCliente().getCPF());
            txtNome.setText(card.getCliente().getNome());
            txtNome.setEnabled(false);
            
            cmbxTipo.setSelectedItem(card.getTipo());
            cmbxBandeira.setSelectedItem(card.getBandeira());
            txtNumeroCartao.setValue(card.getNumero());
            
            // Se o mês for menor que 10, coloca um 0 na frente.
            // Serve para tratamento no combobox para selecionar o objeto do mês.
            if (card.getMesValidade() < 10)
            {
                cmbxDataMes.setSelectedItem("0" + Integer.toString(card.getMesValidade()));
            }
            else
            {
                cmbxDataMes.setSelectedItem(Integer.toString(card.getMesValidade()));
            }
            
            cmbxdataAno.setSelectedItem(Integer.toString(card.getAnoValidade()));
            
            txtCVC.setValue(card.getCvc());
            
            // Cartão de crédito ou débito tem diferenças.
            if (card instanceof CartaoDebito)
            {
                txtLimite.setText(Double.toString(((CartaoDebito) card).getSaldo()));
            }
            else if (card instanceof CartaoCredito)
            {
                txtLimite.setText(Double.toString(((CartaoCredito) card).getLimite()));
            }
            
            Helper.mostrarMensagem("", lblExtraInfo);
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        lstCartoes.remove(tblCartoes.getSelectedRow());
        
        Helper.mostrarMensagem("Cartão excluído!", Color.RED, lblExtraInfo);
        
        limparFormulario();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void limparFormulario()
    {
        txtCPF.setValue("");
        txtNome.setText("");
        txtNome.setEnabled(true);
        cmbxTipo.setSelectedIndex(0);
        txtNumeroCartao.setValue("");
        cmbxBandeira.setSelectedIndex(0);
        cmbxDataMes.setSelectedIndex(0);
        cmbxdataAno.setSelectedIndex(0);
        txtCVC.setValue("");
        txtLimite.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cmbxBandeira;
    private javax.swing.JComboBox cmbxDataMes;
    private javax.swing.JComboBox cmbxTipo;
    private javax.swing.JComboBox cmbxdataAno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBandeira;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCodigoVerificaçao;
    private javax.swing.JLabel lblDataValidade;
    private javax.swing.JLabel lblExtraInfo;
    private javax.swing.JLabel lblInformeCartao;
    private javax.swing.JLabel lblLimite;
    private javax.swing.JLabel lblNomeTitular;
    private javax.swing.JLabel lblNumeroCartao;
    private java.util.List<wallet.models.Cartao> lstCartoes;
    private javax.swing.JTable tblCartoes;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCVC;
    private javax.swing.JTextField txtLimite;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtNumeroCartao;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
